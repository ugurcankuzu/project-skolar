// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project_onlineClassroom.Models;

#nullable disable

namespace project_onlineClassroom.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250611101400_InitialBaseline")]
    partial class InitialBaseline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("project_onlineClassroom.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("dueDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id")
                        .HasName("PK__Assignme__3214EC2768DBBDE8");

                    b.HasIndex("ClassId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_ID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<byte>("UserLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)50)
                        .HasColumnName("user_limit");

                    b.HasKey("Id")
                        .HasName("PK__Classes__3214EC274616FCFF");

                    b.HasIndex("OwnerId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_ID");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("joinedAt");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_ID");

                    b.HasKey("Id")
                        .HasName("PK__Particip__3214EC273F5A0346");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.SubmittedAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int")
                        .HasColumnName("assignment_ID");

                    b.Property<string>("Feedback")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("feedback")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("filePath");

                    b.Property<byte?>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("grade")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("submittedAt");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_ID");

                    b.HasKey("Id")
                        .HasName("PK__Submitte__3214EC27959CBEE5");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("UserId");

                    b.ToTable("SubmittedAssignments");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id")
                        .HasName("PK__Topics__3214EC27A961F329");

                    b.HasIndex("ClassId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.TopicNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.Property<int>("TopicId")
                        .HasColumnType("int")
                        .HasColumnName("topic_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id")
                        .HasName("PK__TopicNot__3214EC27C943E927");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicNotes");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.TopicNoteBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("BlockOrder")
                        .HasColumnType("tinyint")
                        .HasColumnName("blockOrder");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imageUrl")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("NoteId")
                        .HasColumnType("int")
                        .HasColumnName("note_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id")
                        .HasName("PK__TopicNot__3214EC278353CC29");

                    b.HasIndex("NoteId");

                    b.ToTable("TopicNoteBlocks");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsEducator")
                        .HasColumnType("bit")
                        .HasColumnName("isEducator");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("password");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC27901035D5");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E616497103F8B")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Assignment", b =>
                {
                    b.HasOne("project_onlineClassroom.Models.Class", "Class")
                        .WithMany("Assignments")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Assignmen__class__4F7CD00D");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Class", b =>
                {
                    b.HasOne("project_onlineClassroom.Models.User", "Owner")
                        .WithMany("Classes")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Classes__owner_I__4CA06362");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Participant", b =>
                {
                    b.HasOne("project_onlineClassroom.Models.Class", "Class")
                        .WithMany("Participants")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Participa__class__4E88ABD4");

                    b.HasOne("project_onlineClassroom.Models.User", "User")
                        .WithMany("Participants")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Participa__user___4D94879B");

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.SubmittedAssignment", b =>
                {
                    b.HasOne("project_onlineClassroom.Models.Assignment", "Assignment")
                        .WithMany("SubmittedAssignments")
                        .HasForeignKey("AssignmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Submitted__assig__5070F446");

                    b.HasOne("project_onlineClassroom.Models.User", "User")
                        .WithMany("SubmittedAssignments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Submitted__user___5165187F");

                    b.Navigation("Assignment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Topic", b =>
                {
                    b.HasOne("project_onlineClassroom.Models.Class", "Class")
                        .WithMany("Topics")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Topics__class_ID__52593CB8");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.TopicNote", b =>
                {
                    b.HasOne("project_onlineClassroom.Models.Topic", "Topic")
                        .WithMany("TopicNotes")
                        .HasForeignKey("TopicId")
                        .IsRequired()
                        .HasConstraintName("FK__TopicNote__topic__534D60F1");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.TopicNoteBlock", b =>
                {
                    b.HasOne("project_onlineClassroom.Models.TopicNote", "Note")
                        .WithMany("TopicNoteBlocks")
                        .HasForeignKey("NoteId")
                        .IsRequired()
                        .HasConstraintName("FK__TopicNote__note___5441852A");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Assignment", b =>
                {
                    b.Navigation("SubmittedAssignments");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Class", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Participants");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.Topic", b =>
                {
                    b.Navigation("TopicNotes");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.TopicNote", b =>
                {
                    b.Navigation("TopicNoteBlocks");
                });

            modelBuilder.Entity("project_onlineClassroom.Models.User", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Participants");

                    b.Navigation("SubmittedAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
